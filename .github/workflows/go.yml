name: Go

on:
  push:
    branches: [ main, release/** ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_protected == 'true' && github.sha || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  complete:
    if: always()
    needs: [lint, build, test]
    runs-on: ubuntu-22.04
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for new-from-rev option in .golangci.yml
      - uses: ./.github/actions/setup-go
      - uses: golangci/golangci-lint-action@v7
        with:
          version: v2.1.6 # this is the golangci-lint version
          github-token: ${{ secrets.GITHUB_TOKEN }}
          only-new-issues: true

  build:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        go: ["1.23"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/setup-go
      with:
        go-version: ${{ matrix.go }}
    - run: go build ./...

  test:
    strategy:
      matrix:
        os: [ubuntu-22.04]
        go: ["1.23"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        # We need to full history for git-restore-mtime to know what modification dates to use.
        # Otherwise, the Go test cache will fail (due to the modification time of fixtures changing).
        fetch-depth: '0'
    - uses: ./.github/actions/setup-go
      with:
        go-version: ${{ matrix.go }}
    - run: go test -race -cover ./...
